@model ProductOverviewModel

@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax

@inject CatalogSettings catalogSettings
@inject IWorkContext workContext
@{
    //prepare "Add to cart" AJAX link
    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}

<div class="product-card" data-productid="@Model.Id">
    <div class="product-image">
        @{
            var picture = Model.PictureModels.FirstOrDefault();
            // Use thumbnail for product listings, fall back to main image if no thumbnail
            var imageUrl = picture?.ThumbImageUrl ?? picture?.ImageUrl;
        }
        <a href="@(Url.RouteUrl<Product>(new { SeName = Model.SeName }))" title="@picture?.Title">
            <img alt="@picture?.AlternateText" src="@imageUrl" title="@picture?.Title" />
        </a>

        <div class="product-badges">
            @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
            {
                var oldPrice = decimal.Parse(Model.ProductPrice.OldPrice.Replace("£", "").Replace(",", ""));
                var newPrice = decimal.Parse(Model.ProductPrice.Price.Replace("£", "").Replace(",", ""));
                var discount = Math.Round(((oldPrice - newPrice) / oldPrice) * 100);
                <span class="badge sale">-@(discount)%</span>
            }
            @if (Model.MarkAsNew)
            {
                <span class="badge new">NEW</span>
            }
        </div>

        <div class="product-actions">
            <button class="quick-view" title="@T("Products.Details")" onclick="location.href='@(Url.RouteUrl<Product>(new { SeName = Model.SeName }))'"><i class="fas fa-eye"></i></button>
            @if (!Model.ProductPrice.DisableWishlistButton)
            {
                <button class="add-wishlist" title="@T("ShoppingCart.AddToWishlist")" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;"><i class="fas fa-heart"></i></button>
            }
            <button class="compare" title="@T("Products.Compare.AddToCompareList")" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;"><i class="fas fa-balance-scale"></i></button>
        </div>
    </div>
    <div class="product-info">
        <h3 class="product-title">
            <a href="@(Url.RouteUrl<Product>(new {SeName = Model.SeName }))">@Model.Name</a>
        </h3>

        @if (catalogSettings.ShowSkuOnCatalogPages && !string.IsNullOrEmpty(Model.Sku))
        {
            <p class="product-brand">SKU: @Model.Sku</p>
        }
        else if (!string.IsNullOrEmpty(Model.ShortDescription))
        {
            <p class="product-brand">@Html.Raw(Model.ShortDescription)</p>
        }

        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
        {
            var ratingPercent = 0;
            var starRating = 0;
            if (Model.ReviewOverviewModel.TotalReviews != 0)
            {
                ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                starRating = (Model.ReviewOverviewModel.RatingSum / Model.ReviewOverviewModel.TotalReviews);
            }
            <div class="product-rating">
                <div class="stars">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= starRating)
                        {
                            <i class="fas fa-star"></i>
                        }
                        else if (i - 0.5 <= starRating)
                        {
                            <i class="fas fa-star-half-alt"></i>
                        }
                        else
                        {
                            <i class="far fa-star"></i>
                        }
                    }
                </div>
                <span class="rating-count">(@Model.ReviewOverviewModel.TotalReviews)</span>
            </div>
        }

        <div class="product-price">
            @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
            {
                <span class="original-price">@Model.ProductPrice.OldPrice</span>
            }
            <span class="current-price">@Model.ProductPrice.Price</span>
        </div>

        @if (!Model.ProductPrice.DisableBuyButton)
        {
            var addToCartText = T("ShoppingCart.AddToCart").Text;
            if (Model.ProductPrice.IsRental)
            {
                addToCartText = T("ShoppingCart.Rent").Text;
            }
            if (Model.ProductPrice.AvailableForPreOrder)
            {
                addToCartText = T("ShoppingCart.PreOrder").Text;
            }
            <button type="button" class="add-to-cart" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;">@(addToCartText)</button>
        }
    </div>
</div>

