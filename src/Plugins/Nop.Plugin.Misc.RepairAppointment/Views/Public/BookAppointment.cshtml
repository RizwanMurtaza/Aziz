@model Nop.Plugin.Misc.RepairAppointment.Models.RepairAppointment.RepairAppointmentModel
@using Nop.Web.Framework.UI
@{
    Layout = "_ColumnsOne";
    NopHtml.AddTitleParts("Book Repair Appointment");
    NopHtml.AppendPageCssClassParts("html-repair-appointment-page");
    NopHtml.AppendCssFileParts("~/Plugins/Misc.RepairAppointment/Content/appointment.css");
    NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/Plugins/Misc.RepairAppointment/Content/appointment.js");
}

<div class="page repair-appointment-page">
    <div class="page-title">
        <h1>🔧 Book Repair Appointment</h1>
        <p class="page-subtitle">Professional device repair service</p>
    </div>

    <div class="page-body">
        <form asp-controller="RepairAppointmentPublic" asp-action="BookAppointment" method="post" id="appointment-form">
            <div asp-validation-summary="ModelOnly" class="message-error"></div>

            <!-- Personal Information Section -->
            <div class="fieldset personal-info-card">
                <div class="title">
                    <strong>📋 Personal Information</strong>
                </div>
                <div class="form-fields">
                    <div class="form-row">
                        <div class="inputs">
                            <label asp-for="CustomerName" class="form-label">Full Name <nop-required /></label>
                            <input asp-for="CustomerName" placeholder="Enter your full name" class="form-control" />
                            <span asp-validation-for="CustomerName"></span>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="inputs half-width">
                            <label asp-for="Email" class="form-label">Email Address <nop-required /></label>
                            <input asp-for="Email" type="email" placeholder="your.email@example.com" class="form-control" />
                            <span asp-validation-for="Email"></span>
                        </div>

                        <div class="inputs half-width">
                            <label asp-for="Phone" class="form-label">Phone Number <nop-required /></label>
                            <input asp-for="Phone" type="tel" placeholder="+44 7123 456789 or 07123 456789" class="form-control" pattern="^(\+44\s?7\d{3}|\(?07\d{3}\)?|7\d{3})\s?\d{3}\s?\d{3}$" title="Please enter a valid UK mobile number (e.g. +44 7123 456789 or 07123 456789)" />
                            <span asp-validation-for="Phone"></span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Device Information Section -->
            <div class="fieldset device-info-card">
                <div class="title">
                    <strong>🔧 Device Information</strong>
                </div>
                <div class="form-fields">
                    <div class="form-row">
                        <div class="inputs">
                            <label for="device-type-select" class="form-label">Device Type <nop-required /></label>
                            <select asp-for="RepairCategoryId" asp-items="Model.AvailableDeviceTypes" id="device-type-select" class="form-control">
                            </select>
                            <span asp-validation-for="DeviceType"></span>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="inputs half-width">
                            <label for="product-select" class="form-label">Product Type</label>
                            <select asp-for="RepairProductId" id="product-select" class="form-control" disabled>
                                <option value="">Select device type first</option>
                            </select>
                            <span asp-validation-for="RepairProductId"></span>
                        </div>

                        <div class="inputs half-width">
                            <label for="repair-type-select" class="form-label">Repair Type</label>
                            <select asp-for="RepairTypeId" id="repair-type-select" class="form-control" disabled>
                                <option value="">Select product first</option>
                            </select>
                            <span asp-validation-for="RepairTypeId"></span>
                        </div>
                    </div>

                    <div class="form-row" id="price-row" style="display: none;">
                        <div class="price-display-card">
                            <div id="estimated-price" class="price-content">
                                <!-- Price will be populated by JavaScript -->
                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="inputs">
                            <label asp-for="IssueDescription" class="form-label">Issue Description <nop-required /></label>
                            <textarea asp-for="IssueDescription" rows="4" class="form-control"
                                      placeholder="Please describe the issue with your device in detail. The more information you provide, the better we can assist you."></textarea>
                            <span asp-validation-for="IssueDescription"></span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Appointment Date & Time Section -->
            <div class="fieldset appointment-datetime-card">
                <div class="title">
                    <strong>📅 Select Appointment Date & Time</strong>
                </div>
                <div class="form-fields">
                    <!-- Week View Calendar -->
                    <div class="calendar-section">
                        <label class="form-label">Select Date:</label>
                        <div class="calendar-container">
                            <div class="calendar-header">
                                <button type="button" id="prev-week" class="calendar-nav" aria-label="Previous week">‹</button>
                                <h3 id="calendar-week-range"></h3>
                                <button type="button" id="next-week" class="calendar-nav" aria-label="Next week">›</button>
                            </div>
                            <div class="calendar-weekdays">
                                <div class="weekday">Sun</div>
                                <div class="weekday">Mon</div>
                                <div class="weekday">Tue</div>
                                <div class="weekday">Wed</div>
                                <div class="weekday">Thu</div>
                                <div class="weekday">Fri</div>
                                <div class="weekday">Sat</div>
                            </div>
                            <div class="calendar-week-row" id="calendar-week">
                                <!-- Week days will be populated by JavaScript -->
                            </div>
                        </div>
                        <input asp-for="AppointmentDate" type="hidden" id="selected-date" />
                        <span asp-validation-for="AppointmentDate"></span>
                    </div>

                    <!-- Time Slots Grid -->
                    <div class="time-slots-section" id="time-slots-section" style="display: none;">
                        <label class="form-label">Available Time Slots:</label>
                        <div class="time-slots-container" id="time-slots-container">
                            <!-- Time slots will be populated by JavaScript -->
                        </div>
                        <input asp-for="TimeSlotId" type="hidden" id="selected-time-slot" />
                        <div id="slot-availability" class="slot-info"></div>
                        <span asp-validation-for="TimeSlotId"></span>
                    </div>
                </div>
            </div>

            <!-- Hidden fields -->
            <input asp-for="RepairCategoryId" type="hidden" id="repair-category-id" />
            <input asp-for="DeviceType" type="hidden" id="device-type-hidden" />

            <div class="form-buttons">
                <button type="submit" class="btn-appointment-submit" id="submit-appointment">
                    <span class="btn-icon">🚀</span>
                    <span class="btn-text">Book My Appointment</span>
                </button>
            </div>

            <div id="appointment-message" class="message-box" style="display:none;"></div>
        </form>
    </div>
</div>

<script type="text/javascript">
$(document).ready(function() {
    // Initialize variables first
    var currentWeekStart = getWeekStart(new Date());
    var selectedDate = null;

    // Initialize week view calendar after variables are declared
    initializeWeekView();

    // Device type change handler
    $('#device-type-select').on('change', function() {
        var categoryId = $(this).val();
        var categoryName = $(this).find('option:selected').text();

        $('#device-type-hidden').val(categoryName);
        $('#repair-category-id').val(categoryId);

        // Reset dependent dropdowns
        $('#product-select').html('<option value="">Loading products...</option>').prop('disabled', true);
        $('#repair-type-select').html('<option value="">Select product first</option>').prop('disabled', true);
        hidePrice();

        if (categoryId && categoryId !== '') {
            loadProductsByCategory(categoryId);
        } else {
            resetProductDropdown();
            resetRepairTypeDropdown();
        }
    });

    // Product change handler
    $('#product-select').on('change', function() {
        var productId = $(this).val();

        // Reset repair types
        $('#repair-type-select').html('<option value="">Loading repair types...</option>').prop('disabled', true);
        hidePrice();

        if (productId && productId !== '' && productId !== 'other') {
            loadRepairTypesByProduct(productId);
        } else if (productId === 'other') {
            resetRepairTypeDropdown(true); // true = include Other option
        } else {
            resetRepairTypeDropdown();
        }
    });

    // Repair type change handler
    $('#repair-type-select').on('change', function() {
        var repairTypeId = $(this).val();

        if (repairTypeId && repairTypeId !== '' && repairTypeId !== 'other') {
            showEstimatedPrice(repairTypeId);
        } else {
            hidePrice();
        }
    });

    function loadProductsByCategory(categoryId) {
        $.ajax({
            url: '@Url.Action("GetProductsByCategory", "RepairAppointmentPublic")',
            type: 'GET',
            data: { categoryId: categoryId },
            success: function(products) {
                var $select = $('#product-select');
                $select.empty().prop('disabled', false);

                $select.append('<option value="">Select Product Type</option>');

                if (products && products.length > 0) {
                    $.each(products, function(i, product) {
                        $select.append('<option value="' + product.id + '">' + product.text + '</option>');
                    });
                }

                // Always add "Other" option
                $select.append('<option value="other">Other</option>');
            },
            error: function(xhr, status, error) {
                console.error('Error loading products:', error);
                $('#product-select').html('<option value="">Error loading products</option>').prop('disabled', false);
            }
        });
    }

    function loadRepairTypesByProduct(productId) {
        $.ajax({
            url: '@Url.Action("GetRepairTypesByProduct", "RepairAppointmentPublic")',
            type: 'GET',
            data: { productId: productId },
            success: function(repairTypes) {
                var $select = $('#repair-type-select');
                $select.empty().prop('disabled', false);

                $select.append('<option value="">Select Repair Type</option>');

                if (repairTypes && repairTypes.length > 0) {
                    $.each(repairTypes, function(i, repairType) {
                        var optionText = repairType.text;
                        if (repairType.price && repairType.price > 0) {
                            optionText += ' - $' + repairType.price.toFixed(2);
                        }
                        $select.append('<option value="' + repairType.id + '" data-price="' + (repairType.price || 0) + '" data-duration="' + (repairType.duration || 0) + '">' + optionText + '</option>');
                    });
                }

                // Always add "Other" option
                $select.append('<option value="other">Other</option>');
            },
            error: function(xhr, status, error) {
                console.error('Error loading repair types:', error);
                $('#repair-type-select').html('<option value="">Error loading repair types</option>').prop('disabled', false);
            }
        });
    }

    function showEstimatedPrice(repairTypeId) {
        $.ajax({
            url: '@Url.Action("GetRepairTypeDetails", "RepairAppointmentPublic")',
            type: 'GET',
            data: { repairTypeId: repairTypeId },
            success: function(repairType) {
                if (repairType && repairType.estimatedPrice > 0) {
                    var priceHtml = '<div class="price-info">';
                    priceHtml += '<div class="price-amount">💰 Estimated Price: <strong>$' + repairType.estimatedPrice.toFixed(2) + '</strong></div>';
                    if (repairType.estimatedDurationMinutes > 0) {
                        priceHtml += '<div class="price-duration">⏱️ Duration: <strong>' + repairType.estimatedDurationMinutes + ' minutes</strong></div>';
                    }
                    priceHtml += '</div>';

                    $('#estimated-price').html(priceHtml);
                    $('#price-row').slideDown(300);
                }
            }
        });
    }

    function hidePrice() {
        $('#price-row').slideUp(300);
    }

    function resetProductDropdown() {
        $('#product-select').html('<option value="">Select device type first</option>').prop('disabled', true);
    }

    function resetRepairTypeDropdown(includeOther = false) {
        var $select = $('#repair-type-select');
        if (includeOther) {
            $select.html('<option value="">Select Repair Type</option><option value="other">Other</option>').prop('disabled', false);
        } else {
            $select.html('<option value="">Select product first</option>').prop('disabled', true);
        }
    }

    // Week view functionality
    function initializeWeekView() {
        renderWeekView(currentWeekStart);

        $('#prev-week').on('click', function() {
            currentWeekStart = new Date(currentWeekStart);
            currentWeekStart.setDate(currentWeekStart.getDate() - 7);
            renderWeekView(currentWeekStart);
        });

        $('#next-week').on('click', function() {
            currentWeekStart = new Date(currentWeekStart);
            currentWeekStart.setDate(currentWeekStart.getDate() + 7);
            renderWeekView(currentWeekStart);
        });
    }

    function getWeekStart(date) {
        var weekStart = new Date(date);
        weekStart.setDate(date.getDate() - date.getDay());
        return weekStart;
    }

    function renderWeekView(weekStart) {
        const months = ['January', 'February', 'March', 'April', 'May', 'June',
                       'July', 'August', 'September', 'October', 'November', 'December'];

        // Calculate week end date
        const weekEnd = new Date(weekStart);
        weekEnd.setDate(weekStart.getDate() + 6);

        // Format week range header
        let rangeText;
        if (weekStart.getMonth() === weekEnd.getMonth()) {
            rangeText = `${months[weekStart.getMonth()]} ${weekStart.getDate()}-${weekEnd.getDate()}, ${weekStart.getFullYear()}`;
        } else {
            rangeText = `${months[weekStart.getMonth()]} ${weekStart.getDate()} - ${months[weekEnd.getMonth()]} ${weekEnd.getDate()}, ${weekStart.getFullYear()}`;
        }

        $('#calendar-week-range').text(rangeText);

        const today = new Date();
        today.setHours(0, 0, 0, 0);

        const $weekRow = $('#calendar-week');
        $weekRow.empty();

        // Generate 7 days of the week
        for (let i = 0; i < 7; i++) {
            const cellDate = new Date(weekStart);
            cellDate.setDate(weekStart.getDate() + i);
            const isDisabled = cellDate < today;
            const isSelected = selectedDate && cellDate.toDateString() === selectedDate.toDateString();

            const $dayCell = $('<div class="calendar-day' +
                             (isDisabled ? ' disabled' : '') +
                             (isSelected ? ' selected' : '') +
                             '">' + cellDate.getDate() + '</div>');

            if (!isDisabled) {
                $dayCell.on('click', function() {
                    selectDate(cellDate);
                });
            }

            $weekRow.append($dayCell);
        }
    }

    function selectDate(date) {
        selectedDate = date;
        $('#selected-date').val(date.toISOString().split('T')[0]);

        // Update calendar display
        $('.calendar-day').removeClass('selected');
        $('.calendar-day').each(function() {
            if ($(this).text() == date.getDate() && !$(this).hasClass('disabled')) {
                $(this).addClass('selected');
            }
        });

        // Load available time slots
        loadAvailableSlots(date);
    }

    function loadAvailableSlots(date) {
        $('#time-slots-section').slideDown(300);
        $('#time-slots-container').html('<div class="loading-slots">🔄 Loading available time slots...</div>');
        $('#slot-availability').html('');

        $.ajax({
            url: '@Url.Action("GetAvailableSlots", "RepairAppointmentPublic")',
            type: 'GET',
            data: { date: date.toISOString().split('T')[0] },
            success: function(response) {
                const $container = $('#time-slots-container');
                $container.empty();

                if (response.slots && response.slots.length > 0) {
                    $.each(response.slots, function(i, slot) {
                        const isUnavailable = slot.available <= 0;
                        const $timeSlot = $('<div class="time-slot' + (isUnavailable ? ' unavailable' : '') + '" data-slot-id="' + slot.id + '">' +
                                          '<div class="slot-time">' + slot.text + '</div>' +
                                          '<div class="slot-availability">' +
                                          (slot.available > 0 ? slot.available + ' available' : 'Fully booked') +
                                          '</div></div>');

                        if (!isUnavailable) {
                            $timeSlot.on('click', function() {
                                selectTimeSlot(slot.id, slot.text);
                            });
                        }

                        $container.append($timeSlot);
                    });
                } else {
                    $container.html('<div class="no-slots">📅 No appointments available for the selected date.<br/>Please choose another date.</div>');
                    $('#slot-availability').html('<div class="warning-message">⚠️ No appointments available for the selected date.</div>');
                }
            },
            error: function() {
                $('#time-slots-container').html('<div class="error-slots">❌ Error loading time slots. Please try again.</div>');
            }
        });
    }

    function selectTimeSlot(slotId, slotText) {
        $('#selected-time-slot').val(slotId);

        $('.time-slot').removeClass('selected');
        $('[data-slot-id="' + slotId + '"]').addClass('selected');

        $('#slot-availability').html('<div class="success-message">✅ Selected: ' + slotText + '</div>');
    }

    // Form validation helper
    function validateForm() {
        var isValid = true;
        var errors = [];

        // Check required fields
        if (!$('#CustomerName').val().trim()) {
            errors.push('Full Name is required');
            isValid = false;
        }
        if (!$('#Email').val().trim()) {
            errors.push('Email is required');
            isValid = false;
        }
        var phoneValue = $('#Phone').val().trim();
        if (!phoneValue) {
            errors.push('Phone Number is required');
            isValid = false;
        } else if (!phoneValue.match(/^(\+44\s?7\d{3}|\(?07\d{3}\)?|7\d{3})\s?\d{3}\s?\d{3}$/)) {
            errors.push('Please enter a valid UK mobile number');
            isValid = false;
        }
        var deviceTypeValue = $('#device-type-select').val();
        var deviceTypeHiddenValue = $('#device-type-hidden').val();
        if (!deviceTypeValue && !deviceTypeHiddenValue) {
            errors.push('Device Type is required');
            isValid = false;
        }
        if (!$('#IssueDescription').val().trim()) {
            errors.push('Issue Description is required');
            isValid = false;
        }
        if (!$('#selected-date').val()) {
            errors.push('Appointment Date is required');
            isValid = false;
        }
        if (!$('#selected-time-slot').val()) {
            errors.push('Time Slot is required');
            isValid = false;
        }

        if (!isValid) {
            $('#appointment-message').removeClass('message-success').addClass('message-error')
                .html('❌ Please fill in all required fields:<br/>• ' + errors.join('<br/>• ')).show();
        }

        return isValid;
    }

    // Form submission
    $('#appointment-form').on('submit', function(e) {
        e.preventDefault();

        if (!validateForm()) {
            return;
        }

        var $form = $(this);
        var $submitBtn = $('#submit-appointment');
        var $message = $('#appointment-message');

        $submitBtn.prop('disabled', true).html('<span class="btn-icon">⏳</span><span class="btn-text">Processing...</span>');
        $message.hide();

        // Handle "other" values properly before serialization
        var formData = $form.serializeArray();
        var dataObj = {};

        $.each(formData, function(_, field) {
            if (field.value === 'other') {
                // Don't send "other" as an ID, let the server handle it
                if (field.name === 'RepairProductId' || field.name === 'RepairTypeId') {
                    dataObj[field.name] = 0; // Send 0 for other selections
                } else {
                    dataObj[field.name] = field.value;
                }
            } else {
                dataObj[field.name] = field.value;
            }
        });

        // Convert back to serialized format
        formData = $.param(dataObj);

        $.ajax({
            url: $form.attr('action'),
            type: 'POST',
            data: formData,
            success: function(response) {
                if (response.success) {
                    $message.removeClass('message-error').addClass('message-success')
                        .html('🎉 ' + response.message + '<br/>Confirmation Code: <strong>' + response.confirmationCode + '</strong>')
                        .show();

                    if (response.redirectUrl) {
                        setTimeout(function() {
                            window.location.href = response.redirectUrl;
                        }, 2000);
                    }
                } else {
                    $message.removeClass('message-success').addClass('message-error')
                        .html('❌ ' + response.message).show();
                    $submitBtn.prop('disabled', false).html('<span class="btn-icon">🚀</span><span class="btn-text">Book My Appointment</span>');
                }
            },
            error: function() {
                $message.removeClass('message-success').addClass('message-error')
                    .html('❌ An error occurred. Please try again.').show();
                $submitBtn.prop('disabled', false).html('<span class="btn-icon">🚀</span><span class="btn-text">Book My Appointment</span>');
            }
        });
    });
});
</script>